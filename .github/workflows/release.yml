# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your 
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step 
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  acc-test:
    env:
      HW_ACCESS_KEY: ${{ secrets.HW_ACCESS_KEY }}
      HW_SECRET_KEY: ${{ secrets.HW_SECRET_KEY }}
      HW_REGION_NAME: cn-north-4

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # run acceptance test
      - name: Run acceptance basic test
        # run the step only when HW_ACCESS_KEY is setted
        if: ${{ env.HW_ACCESS_KEY }}
        shell: bash {0}
        run: |
          result=0
          last_tag=$(git tag --sort=-creatordate | sed -n 2p)
          all_files=$(git diff $last_tag --name-only huaweicloud | grep -v "_test.go")
          echo -e "the following files have changed since $last_tag:\n$all_files\n"

          for f in $all_files; do
            path=${f%/*}
            if [ "X$path" != "Xhuaweicloud" ]; then
              # update path to "huaweicloud/services\acceptance/xxx"
              path=${path/services/services\/acceptance}
            fi

            org_file=${f##*/}
            test_file=$path/${org_file/%.go/_test.go}

            if [ -f "./${test_file}" ]; then
              basic_cases=$(grep "^func TestAcc" ./${test_file} | grep _basic | awk '{print $2}' | awk -F '(' '{print $1}')
              if [ "X$basic_cases" != "X" ]; then
                echo "run acceptance basic tests: $basic_cases"
                make testacc TEST="./$path" TESTARGS="-run ${basic_cases}"
                if [ $? -ne 0 ]; then
                  result=`expr $result + 1`
                fi
              fi
            else
              echo "[skipped] --- ./${test_file} does not exist"
            fi
          done
          exit $result

  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
